// this is fine, even if block 'story' is not used in HTML; if it has semantic meaning, it's fine to just use
// block__elements directly
.story {
  
  &__pictures {
    grid-column: full-start / col-end 4;

    display: grid;
    grid-template-rows: repeat(6, 1fr);
    grid-template-columns: repeat(6, 1fr);

    align-items: center;

    background-image: linear-gradient(rgba($color-primary, .5), rgba($color-primary, .5)), 
                      url(../img/back.jpg);
    background-size: cover;

    @media only screen and (max-width: $bp-medium) {
      padding: 6rem;
      grid-column: 1 / -1;
    }
    
  }

  &__img--1 {
    width: 100%;
    box-shadow: 0 2rem 5rem rgba(0, 0, 0, .1);

    // in grid imgs acti differently. Imgs have their intrinsic aspect-ratio (dimension), and they always try
    // to keep it, so an img will not automatically fully stretch to the grid-area we specify for it; to place
    // the img to the center of the grid-area defined for it, add align-items: center to grid (&__pictures)
    grid-area: 2 / 2 / -2 / -2;

    @media only screen and (max-width: $bp-medium) {
      grid-area: 1 / 1 / -1 / 5;
    }
  }

  &__img--2 {
    grid-area: 4 / 4 / 6 / 7;
    box-shadow: 0 2rem 5rem rgba(0, 0, 0, .2);

    // instead of transform, we just increased img width
    width: 115%;
    z-index: 2;

    @media only screen and (max-width: $bp-medium) {
      width: 100%;
      grid-area: 1 / 4 / -1 / 7;
    }
  }

  &__content {
    grid-column: col-start 5 / full-end;
    
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;

    /*
      we use flexbox for centering, because we are centering a one dimensional layout,
      to do the same with grid:

      display: grid;
      align-content: center;
      justify-items: start;
    */

    background-color: $color-grey-light-1;

    // defining padding with vw automatically adds responsive design
    padding: 6rem 8vw;

    @media only screen and (max-width: $bp-medium) {
      // we place &__content above &__pictures by explicitly setting its row
      grid-row: 5 / 6;
      
      grid-column: 1 / -1;
    }
  }

  &__text {
    font-size: 1.5rem;
    font-style: italic;
    margin-bottom: 4rem;
  }
}